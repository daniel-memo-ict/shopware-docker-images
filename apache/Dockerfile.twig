FROM php:{{ phpVersion }}-fpm-alpine

LABEL org.opencontainers.image.source https://github.com/daniel-memo-ict/shopware-docker
COPY --from=ghcr.io/shyim/supervisord /usr/local/bin/supervisord /usr/bin/supervisord
COPY --from=ghcr.io/shyim/shopware-docker/sendmail /sendmail /usr/bin/sendmail
COPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/bin/

ENV TZ=Europe/Berlin \
    FPM_PM=dynamic \
    FPM_PM_MAX_CHILDREN=5 \
    FPM_PM_START_SERVERS=2 \
    FPM_PM_MIN_SPARE_SERVERS=1 \
    FPM_PM_MAX_SPARE_SERVERS=3 \
    PHP_MAX_UPLOAD_SIZE=128m \
    PHP_MAX_EXECUTION_TIME=300 \
    PHP_MEMORY_LIMIT=512m \
    PHP_DUMP_SERVER_URL=http://dump-server:9009 \
    XDEBUG_MODE=debug \
    APP_DOCUMENT_ROOT={{ APP_DOCUMENT_ROOT }} \
    SMTP_ADDRESS=smtp:1025

RUN set -x && \
      apk add --no-cache \
      apache2 \
      apache2-ctl \
      apache2-proxy \
      shadow \
      git \
      gnu-libiconv \
      {% if phpVersionNumeric >= 74 %}icu-data-full \{% endif %}
      socat && \
    install-php-extensions bcmath gd intl mysqli pdo_mysql pdo_pgsql sockets bz2 gmp soap zip gmp redis imagick calendar {% if phpVersionNumeric >= 74 %} ffi {% endif %} {% if production %} opcache {% endif %} {% if xdebug %} xdebug{% if phpVersionNumeric >= 71 and xdebug == 2 %}-2.9.8{% endif %}{% endif %} && \
    ln -s /usr/local/bin/php /usr/bin/php && \
    rm -rf /tmp/* && \
    chown -R www-data:www-data /var/www && \
    usermod -u 1000 www-data {% if xdebug %} && \
    {% if xdebug == 2 %}
    echo 'xdebug.remote_enable=1' > /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.remote_autostart=0' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.remote_connect_back=1' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.remote_port=9000' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.remote_log=/tmp/xdebug.log' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.idekey=PHPSTORM' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.profiler_enable=0' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.profiler_enable_trigger=1' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.profiler_output_dir="/tmp/xdebug"' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.profiler_output_name = "cachegrind.out.%R.%t"' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.auto_trace=0' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.trace_enable_trigger=1' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.trace_output_dir="/var/www/html/traces"' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.trace_output_name="trace.%R.%t"' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.show_mem_delta=1' >> /usr/local/etc/php/conf.d/xdebug.ini
    {% else %}
    echo 'xdebug.discover_client_host=true' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.client_port=9000' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.log=/tmp/xdebug.log' >> /usr/local/etc/php/conf.d/xdebug.ini && \
    echo 'xdebug.output_dir="/tmp/xdebug"' >> /usr/local/etc/php/conf.d/xdebug.ini
    {% endif %}
{% endif %}

{% if phpVersionNumeric >= 71 and xdebug == false and production == false %}
RUN cd /opt/ && \
    wget https://github.com/shyim/php-dump-client-prefixed/archive/main.zip && \
    unzip main.zip && \
    rm main.zip && \
    mv php-dump-client-prefixed-main php-dump-client-prefixed && \
    echo "auto_prepend_file = /opt/php-dump-client-prefixed/prepend.php" > /usr/local/etc/php/conf.d/vardumpserver.ini
{% endif %}


{% if blackfire == true %}
ENV current_os=alpine
RUN version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;") \
    && apk add --no-cache bash \
    && curl -A "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/$current_os/amd64/$version \
    && mkdir -p /tmp/blackfire \
    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire \
    && mv /tmp/blackfire/blackfire-*.so $(php -r "echo ini_get('extension_dir');")/blackfire.so \
    && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8307\n" > $PHP_INI_DIR/conf.d/blackfire.ini \
    && rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz \
    && bash -c "$(curl -L https://installer.blackfire.io/installer.sh)"
{% endif %}

COPY rootfs/ /
EXPOSE 80

STOPSIGNAL SIGKILL

ENTRYPOINT ["/entrypoint.sh"]
